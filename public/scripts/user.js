import { renderBlock } from './lib.js';
/*Написать функцию renderUserBlock, которая принимает имя пользователя, ссылку на
аватар и количество избранных. Последнее поле является необязательным. Использовать
эти данные для вывода блока пользователя. */
export function renderUserBlock(name, avatar, favoriteItemsAmount) {
    const favoritesCaption = favoriteItemsAmount ? favoriteItemsAmount : 'ничего нет';
    const hasFavoriteItems = favoriteItemsAmount ? true : false;
    renderBlock('user-block', `
    <div class="header-container">
      <img class="avatar" src="/img/avatar.png" alt="${avatar}" />
      <div class="info">
          <p class="name">${name}</p>
          <p class="fav">
            <i class="heart-icon${hasFavoriteItems ? ' active' : ''}"></i>${favoritesCaption}
          </p>
      </div>
    </div>
    `);
}
function getUserData(user) {
    if (typeof user === 'string') {
        return JSON.parse(localStorage.getItem(user));
    }
    // return console.log('Ключ должен быть строкой');
}
// function getFavoritesAmount(user: unknown) {
//   if (typeof user === 'string') {
//     return localStorage.getItem(user);
//   }
//   return  console.log('Ключ должен быть строкой');
// }
// console.log(getUserData('user1'));
// console.log(getFavoritesAmount('favoritesAmount'));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91c2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxVQUFVLENBQUE7QUFFdEM7OzRDQUU0QztBQUU1QyxNQUFNLFVBQVUsZUFBZSxDQUFFLElBQVksRUFBRSxNQUFjLEVBQUUsbUJBQTRCO0lBQ3pGLE1BQU0sZ0JBQWdCLEdBQUcsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUE7SUFDakYsTUFBTSxnQkFBZ0IsR0FBRyxtQkFBbUIsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUE7SUFFM0QsV0FBVyxDQUNULFlBQVksRUFDWjs7dURBRW1ELE1BQU07OzRCQUVqQyxJQUFJOztrQ0FFRSxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLFNBQVMsZ0JBQWdCOzs7O0tBSXZGLENBQ0YsQ0FBQTtBQUNILENBQUM7QUFtQ0QsU0FBUyxXQUFXLENBQUMsSUFBYTtJQUNoQyxJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsRUFBRTtRQUM1QixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0tBQy9DO0lBQ0Qsa0RBQWtEO0FBQ3BELENBQUM7QUFFRCwrQ0FBK0M7QUFDL0Msb0NBQW9DO0FBQ3BDLHlDQUF5QztBQUN6QyxNQUFNO0FBQ04scURBQXFEO0FBQ3JELElBQUk7QUFFSixxQ0FBcUM7QUFDckMsc0RBQXNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVuZGVyQmxvY2sgfSBmcm9tICcuL2xpYi5qcydcclxuXHJcbi8q0J3QsNC/0LjRgdCw0YLRjCDRhNGD0L3QutGG0LjRjiByZW5kZXJVc2VyQmxvY2ssINC60L7RgtC+0YDQsNGPINC/0YDQuNC90LjQvNCw0LXRgiDQuNC80Y8g0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPLCDRgdGB0YvQu9C60YMg0L3QsFxyXG7QsNCy0LDRgtCw0YAg0Lgg0LrQvtC70LjRh9C10YHRgtCy0L4g0LjQt9Cx0YDQsNC90L3Ri9GFLiDQn9C+0YHQu9C10LTQvdC10LUg0L/QvtC70LUg0Y/QstC70Y/QtdGC0YHRjyDQvdC10L7QsdGP0LfQsNGC0LXQu9GM0L3Ri9C8LiDQmNGB0L/QvtC70YzQt9C+0LLQsNGC0Yxcclxu0Y3RgtC4INC00LDQvdC90YvQtSDQtNC70Y8g0LLRi9Cy0L7QtNCwINCx0LvQvtC60LAg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPLiAqL1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHJlbmRlclVzZXJCbG9jayAobmFtZTogc3RyaW5nLCBhdmF0YXI6IHN0cmluZywgZmF2b3JpdGVJdGVtc0Ftb3VudD86IG51bWJlcikge1xyXG4gIGNvbnN0IGZhdm9yaXRlc0NhcHRpb24gPSBmYXZvcml0ZUl0ZW1zQW1vdW50ID8gZmF2b3JpdGVJdGVtc0Ftb3VudCA6ICfQvdC40YfQtdCz0L4g0L3QtdGCJ1xyXG4gIGNvbnN0IGhhc0Zhdm9yaXRlSXRlbXMgPSBmYXZvcml0ZUl0ZW1zQW1vdW50ID8gdHJ1ZSA6IGZhbHNlXHJcblxyXG4gIHJlbmRlckJsb2NrKFxyXG4gICAgJ3VzZXItYmxvY2snLFxyXG4gICAgYFxyXG4gICAgPGRpdiBjbGFzcz1cImhlYWRlci1jb250YWluZXJcIj5cclxuICAgICAgPGltZyBjbGFzcz1cImF2YXRhclwiIHNyYz1cIi9pbWcvYXZhdGFyLnBuZ1wiIGFsdD1cIiR7YXZhdGFyfVwiIC8+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJpbmZvXCI+XHJcbiAgICAgICAgICA8cCBjbGFzcz1cIm5hbWVcIj4ke25hbWV9PC9wPlxyXG4gICAgICAgICAgPHAgY2xhc3M9XCJmYXZcIj5cclxuICAgICAgICAgICAgPGkgY2xhc3M9XCJoZWFydC1pY29uJHtoYXNGYXZvcml0ZUl0ZW1zID8gJyBhY3RpdmUnIDogJyd9XCI+PC9pPiR7ZmF2b3JpdGVzQ2FwdGlvbn1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICAgIGBcclxuICApXHJcbn1cclxuXHJcbi8q0J3QsNC/0LjRgdCw0YLRjCDQtNCy0LUg0YTRg9C90LrRhtC40LguINCf0LXRgNCy0LDRjyBnZXRVc2VyRGF0YSwg0LrQvtGC0L7RgNCw0Y8g0YfQuNGC0LDQtdGCINC40LcgbG9jYWxTdG9yYWdlINC60LvRjtGHIHVzZXIuXHJcbtCf0L7QtNGA0LDQt9GD0LzQtdCy0LDQtdGC0YHRjywg0YfRgtC+INC60LvRjtGHINGB0L7QtNC10YDQttC40YIg0L7QsdGK0LXQutGCINGBINC/0L7Qu9GP0LzQuCB1c2VybmFtZSDQuCBhdmF0YXJVcmwuINCS0YLQvtGA0LDRjyDRhNGD0L3QutGG0LjRj1xyXG5nZXRGYXZvcml0ZXNBbW91bnQsINC60L7RgtC+0YDQsNGPINGH0LjRgtCw0LXRgiDQuNC3IGxhY2FsU3RvcmFnZSDQutC70Y7RhyBmYXZvcml0ZXNBbW91bnQuINCa0LvRjtGHINC00L7Qu9C20LXQvVxyXG7RgdC+0LTQtdGA0LbQsNGC0Ywg0LrQvtC70LjRh9C10YHRgtCy0L4g0L/RgNC10LTQvNC10YLQvtCyLCDQtNC+0LHQsNCy0LvQtdC90L3Ri9GFINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvQtdC8INCyINC40LfQsdGA0LDQvdC90L7QtS4g0JTQu9GPINC+0LHQtdC40YVcclxu0YTRg9C90LrRhtC40Lkg0L/RgNC40LzQtdC90LjRgtGMINC/0L7QtNGF0L7QtCDRgSB1bmtub3duLCDRh9GC0L7QsdGLINCy0LDQu9C40LTQuNGA0L7QstCw0YLRjCDRgdC+0LTQtdGA0LbQuNC80L7QtSBsb2NhbFN0b3JhZ2UuXHJcbiovXHJcblxyXG4vLyBjbGFzcyBVc2VyIHtcclxuLy8gICB1c2VybmFtZTogc3RyaW5nXHJcbi8vICAgYXZhdGFyVXJsOiBzdHJpbmdcclxuXHJcbi8vICAgY29uc3RydWN0b3IodXNlcm5hbWU6IHN0cmluZywgYXZhdGFyVXJsOiBzdHJpbmcpIHtcclxuLy8gICAgIHRoaXMudXNlcm5hbWUgID0gdXNlcm5hbWUsXHJcbi8vICAgICB0aGlzLmF2YXRhclVybCA9IGF2YXRhclVybFxyXG4vLyAgIH1cclxuLy8gfVxyXG5cclxuLy8gY29uc3QgdXNlcjEgPSBuZXcgVXNlcignSmFuZScsICd1cmwxJylcclxuLy8gY29uc3QgdXNlcjIgPSBuZXcgVXNlcignS2F0ZScsICd1cmwyJylcclxuLy8gY29uc3QgdXNlcjMgPSBuZXcgVXNlcignVG9tJywgJ3VybDMnKVxyXG5cclxuXHJcbi8vIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd1c2VyMScsIEpTT04uc3RyaW5naWZ5KHVzZXIxKSk7XHJcbi8vIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd1c2VyMicsIEpTT04uc3RyaW5naWZ5KHVzZXIyKSk7XHJcbi8vIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd1c2VyMycsIEpTT04uc3RyaW5naWZ5KHVzZXIzKSk7XHJcbi8vIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdmYXZvcml0ZXNBbW91bnQnLCAnMycpO1xyXG4vLyBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnZmF2b3JpdGVzQW1vdW50MicsICc0Jyk7XHJcblxyXG5pbnRlcmZhY2UgVXNlciB7XHJcbiAgdXNlcm5hbWU6IHN0cmluZyxcclxuICBhdmF0YXJVcmw6IHN0cmluZ1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRVc2VyRGF0YSh1c2VyOiB1bmtub3duKTogVXNlciB7XHJcbiAgaWYgKHR5cGVvZiB1c2VyID09PSAnc3RyaW5nJykge1xyXG4gICAgcmV0dXJuIEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0odXNlcikpO1xyXG4gIH1cclxuICAvLyByZXR1cm4gY29uc29sZS5sb2coJ9Ca0LvRjtGHINC00L7Qu9C20LXQvSDQsdGL0YLRjCDRgdGC0YDQvtC60L7QuScpO1xyXG59XHJcblxyXG4vLyBmdW5jdGlvbiBnZXRGYXZvcml0ZXNBbW91bnQodXNlcjogdW5rbm93bikge1xyXG4vLyAgIGlmICh0eXBlb2YgdXNlciA9PT0gJ3N0cmluZycpIHtcclxuLy8gICAgIHJldHVybiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSh1c2VyKTtcclxuLy8gICB9XHJcbi8vICAgcmV0dXJuICBjb25zb2xlLmxvZygn0JrQu9GO0Ycg0LTQvtC70LbQtdC9INCx0YvRgtGMINGB0YLRgNC+0LrQvtC5Jyk7XHJcbi8vIH1cclxuXHJcbi8vIGNvbnNvbGUubG9nKGdldFVzZXJEYXRhKCd1c2VyMScpKTtcclxuLy8gY29uc29sZS5sb2coZ2V0RmF2b3JpdGVzQW1vdW50KCdmYXZvcml0ZXNBbW91bnQnKSk7XHJcbiJdfQ==